{"remainingRequest":"C:\\Users\\Natha\\Documents\\Development\\HTML\\ezpoll\\ezpollclient\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Natha\\Documents\\Development\\HTML\\ezpoll\\ezpollclient\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Natha\\Documents\\Development\\HTML\\ezpoll\\ezpollclient\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Natha\\Documents\\Development\\HTML\\ezpoll\\ezpollclient\\src\\components\\Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Natha\\Documents\\Development\\HTML\\ezpoll\\ezpollclient\\src\\components\\Question.vue","mtime":1590441670882},{"path":"C:\\Users\\Natha\\Documents\\Development\\HTML\\ezpoll\\ezpollclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Natha\\Documents\\Development\\HTML\\ezpoll\\ezpollclient\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Natha\\Documents\\Development\\HTML\\ezpoll\\ezpollclient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Natha\\Documents\\Development\\HTML\\ezpoll\\ezpollclient\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGV6cG9sbGFwaSBmcm9tICcuLi9zZXJ2aWNlcy9lenBvbGwuc2VydmljZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUXVlc3Rpb24nLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZXNzaW9uX2d1aWQ6ICcnLAogICAgICBxdWVzdGlvbjogbnVsbCwKICAgICAgYW5zd2VyczogW10sCiAgICAgIHNlbGVjdGVkX2luZGV4OiBudWxsLAogICAgICByZXN1bHRfZ3VpZDogbnVsbCwKICAgICAgaW5mbzogbnVsbCwKICAgICAgaW50ZXJ2YWw6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhbnN3ZXJTZWxlY3RlZDogZnVuY3Rpb24gYW5zd2VyU2VsZWN0ZWQoYW5zd2VyKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmFuc3dlcnMuZm9yRWFjaChmdW5jdGlvbiAoeCwgaSkgewogICAgICAgIHhbJ0Nob3NlbiddID0gZmFsc2U7CgogICAgICAgIGlmICh4LkFuc3dlckdVSUQgPT09IGFuc3dlci5BbnN3ZXJHVUlEKSB7CiAgICAgICAgICB4WydDaG9zZW4nXSA9IHRydWU7CiAgICAgICAgICBfdGhpcy5zZWxlY3RlZF9pbmRleCA9IGk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgZXpwb2xsYXBpLnBvc3RSZXN1bHQobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Nlc3Npb25fZ3VpZCcpLCBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcl9ndWlkJyksIHRoaXMuc2VsZWN0ZWRfaW5kZXggPT0gbnVsbCA/IG51bGwgOiB0aGlzLmFuc3dlcnNbdGhpcy5zZWxlY3RlZF9pbmRleF0uQW5zd2VyR1VJRCwgdGhpcy5yZXN1bHRfZ3VpZCwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMucmVzdWx0X2d1aWQgPSByZXNwb25zZTsKICAgICAgfSk7CiAgICB9LAogICAgc2hvd1Jlc3VsdHM6IGZ1bmN0aW9uIHNob3dSZXN1bHRzKCkgewogICAgICBlenBvbGxhcGkuc2hvd1Jlc3VsdHMoKTsKICAgIH0sCiAgICBuZXh0UXVlc3Rpb246IGZ1bmN0aW9uIG5leHRRdWVzdGlvbigpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJ2NyZWF0ZXF1ZXN0aW9uJyk7CiAgICB9LAogICAgZ2V0UXVlc3Rpb246IGZ1bmN0aW9uIGdldFF1ZXN0aW9uKHF1ZXN0aW9uX2d1aWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gZXpwb2xsYXBpLmdldFF1ZXN0aW9uKHF1ZXN0aW9uX2d1aWQsIGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMi5zZWxlY3RlZF9pbmRleCA9IG51bGw7CiAgICAgICAgX3RoaXMyLnJlc3VsdF9ndWlkID0gbnVsbDsKICAgICAgICBfdGhpczIucXVlc3Rpb24gPSByZXNwb25zZS5xdWVzdGlvbjsKICAgICAgICBfdGhpczIuYW5zd2VycyA9IHJlc3BvbnNlLmFuc3dlcnM7CgogICAgICAgIF90aGlzMi5hbnN3ZXJTZWxlY3RlZCh7fSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgIHRoaXMuc2Vzc2lvbl9ndWlkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Nlc3Npb25fZ3VpZCcpOwoKICAgIGlmICh0aGlzLnNlc3Npb25fZ3VpZCkgewogICAgICBlenBvbGxhcGkuZ2V0U2Vzc2lvbih0aGlzLnNlc3Npb25fZ3VpZCwgZnVuY3Rpb24gKHNlc3Npb24pIHsKICAgICAgICBfdGhpczMuZ2V0UXVlc3Rpb24oc2Vzc2lvbi5RdWVzdGlvbkdVSUQpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXMzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBlenBvbGxhcGkuZ2V0UmVzdWx0U3RhdHMoX3RoaXMzLnNlc3Npb25fZ3VpZCwgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJfZ3VpZCcpLCBmdW5jdGlvbiAoc3RhdHMpIHsKICAgICAgICAgICAgICB2YXIgaXNRdWVzdGlvblJlc2V0ID0gX3RoaXMzLmluZm8gJiYgX3RoaXMzLmluZm8ucmVzdWx0cyAmJiBzdGF0cyAmJiAhc3RhdHMucmVzdWx0czsKICAgICAgICAgICAgICB2YXIgaXNOZXdRdWVzdGlvbiA9IHN0YXRzLnF1ZXN0aW9uX2d1aWQgIT09IF90aGlzMy5xdWVzdGlvbi5RdWVzdGlvbkdVSUQ7CiAgICAgICAgICAgICAgX3RoaXMzLmluZm8gPSBzdGF0czsKCiAgICAgICAgICAgICAgaWYgKGlzUXVlc3Rpb25SZXNldCB8fCBpc05ld1F1ZXN0aW9uKSB7CiAgICAgICAgICAgICAgICBfdGhpczMuZ2V0UXVlc3Rpb24oc3RhdHMucXVlc3Rpb25fZ3VpZCk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoX3RoaXMzLmluZm8ucmVzdWx0cykgewogICAgICAgICAgICAgICAgdmFyIGluZm9yZXN1bHRzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShfdGhpczMuaW5mby5yZXN1bHRzKSk7CiAgICAgICAgICAgICAgICB2YXIgYW5zd2VycyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoX3RoaXMzLmFuc3dlcnMpKTsKICAgICAgICAgICAgICAgIF90aGlzMy5pbmZvLnJlc3VsdHMgPSBhbnN3ZXJzLm1hcChmdW5jdGlvbiAoYW5zd2VyKSB7CiAgICAgICAgICAgICAgICAgIHZhciBpbmZvcmVzdWx0c2Fuc3dlciA9IGluZm9yZXN1bHRzLmZpbmQoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4geC5BbnN3ZXJHVUlEID09PSBhbnN3ZXIuQW5zd2VyR1VJRDsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGFuc3dlci5BbnN3ZXJDb3VudCA9IGluZm9yZXN1bHRzYW5zd2VyID8gaW5mb3Jlc3VsdHNhbnN3ZXIuQW5zd2VyQ291bnQgOiAwOwogICAgICAgICAgICAgICAgICByZXR1cm4gYW5zd2VyOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0sIDIwMDApOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCdub3Rmb3VuZCcpOwogICAgfQogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7CiAgfQp9Ow=="},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,KAAA,SAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,cAAA,EAAA,IAJA;AAKA,MAAA,WAAA,EAAA,IALA;AAMA,MAAA,IAAA,EAAA,IANA;AAOA,MAAA,QAAA,EAAA;AAPA,KAAA;AASA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,EAAA,wBAAA,MAAA,EAAA;AAAA;;AACA,WAAA,OAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,QAAA,CAAA,CAAA,QAAA,CAAA,GAAA,KAAA;;AACA,YAAA,CAAA,CAAA,UAAA,KAAA,MAAA,CAAA,UAAA,EAAA;AACA,UAAA,CAAA,CAAA,QAAA,CAAA,GAAA,IAAA;AACA,UAAA,KAAA,CAAA,cAAA,GAAA,CAAA;AACA;AACA,OANA;AAOA,MAAA,SAAA,CAAA,UAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,EACA,KAAA,cAAA,IAAA,IAAA,GAAA,IAAA,GAAA,KAAA,OAAA,CAAA,KAAA,cAAA,EAAA,UADA,EAEA,KAAA,WAFA,EAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,QAAA;AACA,OAJA;AAKA,KAdA;AAeA,IAAA,WAAA,EAAA,uBAAA;AACA,MAAA,SAAA,CAAA,WAAA;AACA,KAjBA;AAkBA,IAAA,YAAA,EAAA,wBAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,gBAAA;AACA,KApBA;AAqBA,IAAA,WAAA,EAAA,qBAAA,aAAA,EAAA;AAAA;;AACA,aAAA,SAAA,CAAA,WAAA,CAAA,aAAA,EAAA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,cAAA,GAAA,IAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,IAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,QAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,QAAA,CAAA,OAAA;;AACA,QAAA,MAAA,CAAA,cAAA,CAAA,EAAA;AACA,OANA,CAAA;AAOA;AA7BA,GAbA;AA4CA,EAAA,OA5CA,qBA4CA;AAAA;;AACA,SAAA,YAAA,GAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA;;AACA,QAAA,KAAA,YAAA,EAAA;AACA,MAAA,SAAA,CAAA,UAAA,CAAA,KAAA,YAAA,EAAA,UAAA,OAAA,EAAA;AACA,QAAA,MAAA,CAAA,WAAA,CAAA,OAAA,CAAA,YAAA,EAAA,IAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,QAAA,GAAA,WAAA,CAAA,YAAA;AACA,YAAA,SAAA,CAAA,cAAA,CAAA,MAAA,CAAA,YAAA,EAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,EAAA,UAAA,KAAA,EAAA;AACA,kBAAA,eAAA,GAAA,MAAA,CAAA,IAAA,IAAA,MAAA,CAAA,IAAA,CAAA,OAAA,IAAA,KAAA,IAAA,CAAA,KAAA,CAAA,OAAA;AACA,kBAAA,aAAA,GAAA,KAAA,CAAA,aAAA,KAAA,MAAA,CAAA,QAAA,CAAA,YAAA;AACA,cAAA,MAAA,CAAA,IAAA,GAAA,KAAA;;AACA,kBAAA,eAAA,IAAA,aAAA,EAAA;AACA,gBAAA,MAAA,CAAA,WAAA,CAAA,KAAA,CAAA,aAAA;AACA;;AACA,kBAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,oBAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA;AACA,oBAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA;AACA,gBAAA,MAAA,CAAA,IAAA,CAAA,OAAA,GAAA,OAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,sBAAA,iBAAA,GAAA,WAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,2BAAA,CAAA,CAAA,UAAA,KAAA,MAAA,CAAA,UAAA;AAAA,mBAAA,CAAA;AACA,kBAAA,MAAA,CAAA,WAAA,GAAA,iBAAA,GAAA,iBAAA,CAAA,WAAA,GAAA,CAAA;AACA,yBAAA,MAAA;AACA,iBAJA,CAAA;AAKA;AACA,aAhBA;AAiBA,WAlBA,EAkBA,IAlBA,CAAA;AAmBA,SApBA;AAqBA,OAtBA;AAuBA,KAxBA,MAwBA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA,GAzEA;AA0EA,EAAA,aA1EA,2BA0EA;AACA,IAAA,aAAA,CAAA,KAAA,QAAA,CAAA;AACA;AA5EA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <h1 v-if=\"question\">\r\n        {{question.Description}} ?\r\n    </h1>\r\n    <div v-if=\"!(info && info.results)\">\r\n      <div v-for=\"(answer, index) in answers\" :key=\"answer.AnswerGUID\">\r\n        <button class=\"my-button\" :class=\"{ 'btnselected': index == selected_index }\"\r\n          v-on:click=\"answerSelected(answer)\">{{answer.Description}}</button>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"info && info.participant_count\">\r\n      <h3>{{info.answers_count}} / {{info.participant_count}} participants have answered . . .</h3>\r\n      <button v-if=\"info.enable_host_btns\" v-on:click=\"showResults\">Show Results</button>\r\n    </div>\r\n    <div v-if=\"info && info.results\">\r\n      <div v-for=\"result in info.results\" :key=\"result.AnswerGUID\">\r\n        <button>\r\n          {{result.Description}}\r\n        </button>\r\n        <div>\r\n          <progress :value=\"100 * result.AnswerCount / info.responses\" max=\"100\" style=\"width:300px;\"></progress>\r\n          <div>{{Math.round(100 * result.AnswerCount / info.responses)}}% ({{result.AnswerCount}}/{{info.responses}})</div>\r\n        </div>\r\n      </div>\r\n      <button v-if=\"info.enable_host_btns\" v-on:click=\"nextQuestion\">NextQuestion</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport * as ezpollapi from '../services/ezpoll.service';\r\n\r\nexport default {\r\n  name: 'Question',\r\n  data() {\r\n    return {\r\n      session_guid: '',\r\n      question: null,\r\n      answers: [],\r\n      selected_index: null,\r\n      result_guid: null,\r\n      info: null,\r\n      interval: null\r\n    };\r\n  },\r\n  methods: {\r\n    answerSelected: function(answer) {\r\n      this.answers.forEach((x, i) => {\r\n        x['Chosen'] = false;\r\n        if (x.AnswerGUID === answer.AnswerGUID) {\r\n          x['Chosen'] = true;\r\n          this.selected_index = i;\r\n        }\r\n      });\r\n      ezpollapi.postResult(localStorage.getItem('session_guid'), localStorage.getItem('user_guid'),\r\n        this.selected_index == null ? null : this.answers[this.selected_index].AnswerGUID,\r\n        this.result_guid, response => {\r\n          this.result_guid = response;\r\n      });\r\n    },\r\n    showResults: function() {\r\n      ezpollapi.showResults();\r\n    },\r\n    nextQuestion: function() {\r\n      this.$router.push('createquestion');\r\n    },\r\n    getQuestion: function(question_guid) {\r\n      return ezpollapi.getQuestion(question_guid, response => {\r\n          this.selected_index = null;\r\n          this.result_guid = null;\r\n          this.question = response.question;\r\n          this.answers = response.answers;\r\n          this.answerSelected({});\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.session_guid = localStorage.getItem('session_guid');\r\n    if (this.session_guid) {\r\n      ezpollapi.getSession(this.session_guid, session => {\r\n          this.getQuestion(session.QuestionGUID).then(() => {\r\n            this.interval = setInterval(() => {\r\n              ezpollapi.getResultStats(this.session_guid, localStorage.getItem('user_guid'), stats => {\r\n                  const isQuestionReset = this.info && this.info.results && stats && !stats.results;\r\n                  const isNewQuestion = stats.question_guid !== this.question.QuestionGUID;\r\n                  this.info = stats;\r\n                  if (isQuestionReset || isNewQuestion) {\r\n                    this.getQuestion(stats.question_guid);\r\n                  }\r\n                  if (this.info.results) {\r\n                    const inforesults = JSON.parse(JSON.stringify(this.info.results));\r\n                    const answers = JSON.parse(JSON.stringify(this.answers));\r\n                    this.info.results = answers.map(answer => {\r\n                      const inforesultsanswer = inforesults.find(x => x.AnswerGUID === answer.AnswerGUID);\r\n                      answer.AnswerCount = inforesultsanswer ? inforesultsanswer.AnswerCount : 0;\r\n                      return answer;\r\n                    });\r\n                  }\r\n                });\r\n            }, 2000);\r\n          });\r\n        });\r\n    } else {\r\n      this.$router.push('notfound');\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.btnselected {\r\n  background-color: #AAAAAA;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}